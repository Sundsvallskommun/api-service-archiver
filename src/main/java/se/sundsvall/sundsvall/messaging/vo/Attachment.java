/*
 * Messaging API
 * API used to send messages, as e-mail or SMS
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package se.sundsvall.sundsvall.messaging.vo;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;
/**
 * Attachment
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-17T10:28:24.465012+01:00[Europe/Berlin]")
public class Attachment {
  @JsonProperty("content")
  private String content = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("contentType")
  private String contentType = null;

  public Attachment content(String content) {
    this.content = content;
    return this;
  }

   /**
   * The attachment (file) content as a BASE64-encoded string
   * @return content
  **/
  @Schema(example = "aGVsbG8gd29ybGQK", description = "The attachment (file) content as a BASE64-encoded string")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public Attachment name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The attachment filename
   * @return name
  **/
  @Schema(example = "test.txt", description = "The attachment filename")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Attachment contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * The attachment content type
   * @return contentType
  **/
  @Schema(example = "text/plain", description = "The attachment content type")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Attachment attachment = (Attachment) o;
    return Objects.equals(this.content, attachment.content) &&
        Objects.equals(this.name, attachment.name) &&
        Objects.equals(this.contentType, attachment.contentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, name, contentType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Attachment {\n");
    
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
